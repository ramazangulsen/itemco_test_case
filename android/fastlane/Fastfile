

# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)
ENV_PATH = "fastlane/app/.env"
ANDROID_VERSION_NAME = "androidVersionName"
ANDROID_VERSION_CODE = "androidVersionCode"
INTERNAL = "internal"
PACKAGE_NAME = "com.example.ny_times_articles"
platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Submit a new Beta Build to Crashlytics Beta"
  lane :beta do
    gradle(task: "clean assembleRelease")
    crashlytics
  
    # sh "your_script.sh"
    # You can also use other beta testing services here
  end
  desc "Deploy to internal test application"

  lane :internal do |options|
    if( options[:flavor] == "prod")
        PACKAGE_NAME = "com.example.ny_times_articles"
        end
    print(PACKAGE_NAME)
    versionNumberArrayLength = google_play_track_version_codes(track:INTERNAL,package_name:PACKAGE_NAME)
    versionNumber = (versionNumberArrayLength.length > 0 ? versionNumberArrayLength[0] : 0).to_i + 1
    versionName = "1.0.0"

    release_names = google_play_track_release_names(track:INTERNAL,package_name:PACKAGE_NAME)

    release_names.each do |release_name|
      versionName = release_names[0]
    end


    if options[:version] != nil
      parts = versionName.split('.')
      parts[-1] = (parts[-1].to_i + 1).to_s
      versionName = parts.join('.')
    end


    setEnvFile(versionNumber,versionName)

    flutter_build(versionName,versionNumber,options[:flavor])
    buildStore(INTERNAL,options[:flavor])
  end


      #aab: "../build/app/outputs/bundle/#{flavor.to_s}Release/app-#{flavor.to_s}-release.aab"#

  def buildStore(track,flavor)
    upload_to_play_store(
      track: track,
      package_name:PACKAGE_NAME,
      aab: "../build/app/outputs/bundle/Release/app-release.aab"
      )
  end
  def setEnvFile(versionNumber,versionName)
    set_properties_value(
      key: ANDROID_VERSION_CODE,
      path: ENV_PATH,
      value: versionNumber
      )
    set_properties_value(
      key: ANDROID_VERSION_NAME,
      path: ENV_PATH,
      value: versionName
      )
    end


  def flutter_build(versionName,versionNumber,flavor)

    UI.message "#{versionNumber.to_s}"
    UI.message "#{versionName.to_s}"

    # "flutter build appbundle --flavor #{flavor.to_s} -t lib/main_#{flavor.to_s}.dart --build-name
    Dir.chdir '../../' do
      sh('flutter', 'packages', 'get')
      sh(
        "flutter build appbundle  -t lib/main.dart --build-name=#{
          versionName
        } --build-number=#{versionNumber.to_s}"
      )
    end
  end

end